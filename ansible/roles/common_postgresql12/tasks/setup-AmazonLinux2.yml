#
# Install PostgreSQL 12
#

- name: Install a yum repository file of pgdg 1/2.
  # The repository file will be downloaded from the URL https://yum.postgresql.org/repopackages.php
  # This task cannot use the "yum" module because you cannot specify the "--nodeps" option with running the yum/rpm command.
  shell: "rpm -ivh --nodeps https://download.postgresql.org/pub/repos/yum/12/redhat/rhel-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm"
  args:
    creates: /etc/yum.repos.d/pgdg-redhat-all.repo

- name: Install a yum repository file of pgdg 2/2.
  replace: dest=/etc/yum.repos.d/pgdg-redhat-all.repo regexp='\$releasever' replace='7'

- name: Install PostgreSQL 12 packages.
  yum:
    name:
     - python-psycopg2
     - postgresql12
     - postgresql12-server

- name: Perform the initdb command.
  shell: "/usr/pgsql-12/bin/postgresql-12-setup initdb"
  args:
    creates: /var/lib/pgsql/12/data/PG_VERSION

- name: Start the PostgreSQL 12 service and make it running on rebooting
  systemd:
    name: postgresql-12
    enabled: yes
    state: started

- name: Make the PostgreSQL server can be connected with TCP/IP via the VM dedicated local network segment. 1/2.
  lineinfile:
    path: /var/lib/pgsql/12/data/postgresql.conf
    regexp: "^listen_addresses = .*$"
    line: "listen_addresses = '*'"
    backup: yes
  notify:
    restart postgresql12 service

- name: Make the PostgreSQL server can be connected with TCP/IP via the VM dedicated local network segment. 2/2.
  lineinfile:
    path: /var/lib/pgsql/12/data/pg_hba.conf
    regexp: "host.*all.*all.*{{ postgresql_trusted_network }}"
    line: "host\tall\t\tall\t\t{{ postgresql_trusted_network }}\tmd5"
    backup: yes
  notify:
    reload postgresql12 service

- name: Make the PostgreSQL server can be connected with TCP/IP and md5 hash authN via the loopback interface.
  lineinfile:
    path: /var/lib/pgsql/12/data/pg_hba.conf
    regexp: "host.*all.*all.*127.0.0.1/32.*ident"
    line: "host\tall\t\tall\t\t127.0.0.1/32\t\tmd5"
    backup: yes
  notify:
    reload postgresql12 service

- name: Create a PostgerSQL user named "{{ login_user_name }}" for the default OS user.
  become: yes
  become_user: postgres
  postgresql_user:
    login_unix_socket:
    login_user: postgres
    name: "{{ login_user_name }}"
    password: "{{ login_user_name }}"

- name: Create a default database for the user named "{{ login_user_name }}".
  become: yes
  become_user: postgres
  postgresql_db:
    login_unix_socket:
    login_user: postgres
    name: "{{ login_user_name }}"
    owner: "{{ login_user_name }}"
    state: present

